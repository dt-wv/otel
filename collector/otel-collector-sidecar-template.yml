apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: 'my application namespace'
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:latest
  mode: sidecar # statefulset, daemonset, sidecar
  config: |
    receivers:
      # Data sources: logs
      fluentforward:
        endpoint: 0.0.0.0:8006

      # Data sources: metrics
   #  hostmetrics:
   #    scrapers:
   #      cpu:
   #      disk:
   #      filesystem:
   #      load:
   #      memory:
   #      network:
   #      process:
   #      processes:
   #      paging:

      # Data sources: traces
      jaeger:
        protocols:
          grpc:
          thrift_binary:
          thrift_compact:
          thrift_http:

      # Data sources: traces
   #  kafka:
   #    protocol_version: 2.0.0

      # Data sources: traces, metrics
      opencensus:

      # Data sources: traces, metrics, logs
      otlp:
        protocols:
          grpc:
          http:

      # Data sources: metrics
    # prometheus:
    #   config:
    #     scrape_configs:
    #       - job_name: otel-collector
    #         scrape_interval: 5s
    #         static_configs:
    #           - targets: [localhost:8888]

      # Data sources: traces
      zipkin:

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 25
      batch:
        send_batch_size: 10000
        timeout: 10s

    exporters:
      otlphttp:
         endpoint: "https://${environment-id}.live.dynatrace.com/api/v2/otlp"
         headers:
           Authorization: "Api-Token ${API_TOKEN}"

      logging:

    service:
      pipelines:
        traces:
          receivers: [jaeger,opencensus,otlp,zipkin]
          processors: [memory_limiter, batch]
          exporters: [otlphttp]
        metrics:
          receivers: [opencensus,otlp]
          processors: [memory_limiter, batch]
          exporters: [otlphttp]
        logs:
          receivers: [fluentforward,otlp]
          processors: [memory_limiter, batch]
          exporters: [logging]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector-collector
  namespace: 'my application namespace'
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: otel-collector
  ports:
    - name: fluentforward
      port: 8006
      protocol: TCP
      targetPort: 8006
    - appProtocol: grpc
      name: jaeger-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: jaeger-thrift-binary
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: jaeger-thrift-compact
      port: 6831
      protocol: UDP
      targetPort: 6831
    - appProtocol: http
      name: jaeger-thrift-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: opencensus
      port: 55678
      protocol: TCP
      targetPort: 55678
    - appProtocol: grpc
      name: otlp-grpc
      port: 4317
      protocol: TCP
      targetPort: 4317
    - appProtocol: http
      name: otlp-http
      port: 4318
      protocol: TCP
      targetPort: 4318
    - appProtocol: http
      name: otlp-http-legacy
      port: 55681
      protocol: TCP
      targetPort: 4318
    - appProtocol: http
      name: zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411