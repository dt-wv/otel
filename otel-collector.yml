apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: otel-backend
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:latest
  mode: deployment # statefulset, daemonset, sidecar
  autoscaler:
    targetCPUUtilization: 90
    minReplicas: 1
    maxReplicas: 5
  config: |
    receivers:
      # Data sources: logs
      fluentforward:
        endpoint: 0.0.0.0:8006

      # Data sources: metrics
   #  hostmetrics:
   #    scrapers:
   #      cpu:
   #      disk:
   #      filesystem:
   #      load:
   #      memory:
   #      network:
   #      process:
   #      processes:
   #      paging:

      # Data sources: traces
      jaeger:
        protocols:
          grpc:
          thrift_binary:
          thrift_compact:
          thrift_http:

      # Data sources: traces
   #  kafka:
   #    protocol_version: 2.0.0

      # Data sources: traces, metrics
      opencensus:

      # Data sources: traces, metrics, logs
      otlp:
        protocols:
          grpc:
          http:

      # Data sources: metrics
      prometheus:
        config:
          scrape_configs:
            - job_name: otel-collector
              scrape_interval: 5s
              static_configs:
                - targets: [localhost:8888]

      # Data sources: traces
      zipkin:

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 25
      batch:
        send_batch_size: 10000
        timeout: 10s

    exporters:
      otlphttp:
         endpoint: "https://${environment-id}.live.dynatrace.com/api/v2/otlp"
         headers:
           Authorization: "Api-Token ${API_TOKEN}"

      logging:

    service:
      pipelines:
        traces:
          receivers: [jaeger,opencensus,otlp,zipkin]
          processors: [memory_limiter, batch]
          exporters: [otlphttp]
        metrics:
          receivers: [hostmetrics,opencensus,otlp,prometheus]
          processors: [memory_limiter, batch]
          exporters: [otlphttp]
        logs:
          receivers: [fluentforward,otlp]
          processors: [memory_limiter, batch]
          exporters: [logging]